#include<stdio.h>
#include<stdlib.h>
struct node
{
    int coeff,power;
    struct node* next;
};
function to add new node at the end of list 
struct node* addnode(struct node* start,int coeff,int power)
{
    struct node* newnode=(struct node*)malloc(sizeof(struct node));
    newnode->coeff=coeff;
    newnode->power=power;
    newnode->next=NULL;
    struct node *ptr=start;
    while(ptr->next!=NULL)
    {
        ptr=ptr->next;
    }
    ptr->next=newnode;
    return start;
}
void printlist(struct node *ptr)
{
    while(ptr!=NULL)
    {
        printf("%d x^ %d +",ptr->coeff,ptr->power);
        ptr=ptr->next;
    }
    printf("%d",ptr->coeff);
}
void removeduplicates(struct node* start)
{
    struct node* ptr1,*ptr2,*dup;
    ptr1=start;
    while(ptr1!=NULL&&ptr1->next!=NULL)
    {ptr2=ptr1;
    while(ptr2->next!=NULL)
    {
        if (ptr1->power==ptr2->next->power)
        {
            ptr1->coeff=ptr1->coeff+ptr2->next->coeff;
            dup=ptr2->next;
            
            ptr2->next=ptr2->next->next;
            free(dup);
        }
        else
        ptr2=ptr2->next;
    }
    ptr1=ptr1->next;
    }
}

struct node* multiply(struct node *poly1,struct node *poly2,struct node *poly3)
{
    struct node *ptr1,*ptr2;
    ptr1=poly1;
    ptr2=poly2;
    while(ptr1!=NULL)
    {
        while(ptr2!=NULL)
        {
            int coeff,power;
            coeff=ptr1->coeff * ptr2->coeff;
            power=ptr1->power+ptr2->power;
            poly3=addnode(poly3,coeff,power);
            ptr2=ptr2->next;
        }
        ptr2=poly2;
        ptr1=ptr1->next;
    }
    removeduplicates(poly3);
    return poly3;
}
int main()
{
    struct node *poly1=NULL,*poly2=NULL,*poly3=NULL;
    poly1=addnode(poly1,3,2);
    poly1=addnode(poly1,5,1);
    poly1=addnode(poly1,6,0);
    poly2=addnode(poly2,6,1);
    poly2=addnode(poly2,9,0);
    printlist(poly1);
    printlist(poly2);
   poly3=multiply(poly1,poly2,poly3);
    printlist(poly3);
    return 0;
}
