#include<stdio.h>
#include<stdlib.h>
struct Node
{
    int data;
    struct Node* next;
}*head=NULL;
void Create()
{ int n;
 scanf("%d",&n);
    struct Node *newnode,*temp;
    int num,i;
    head=(struct Node*)malloc(sizeof(struct Node));
    scanf("%d",&num);
    head->data=num;
    head->next=NULL;
    temp=head;
    for(i=2;i<=n;i++)
    {
        newnode=(struct Node*)malloc(sizeof(struct Node));
        scanf("%d",&num);
        newnode->data=num;
        newnode->next=NULL;
        temp->next=newnode;
        temp=temp->next;
        
    }
}
void printlist(struct Node* node)
{   printf("Linked List : ");
    while(node!=NULL)
    {
        printf("->%d",node->data);
        node=node->next;
    }
}
void removeDuplicates(struct Node* head) 
{
    struct Node* current = head; 
    struct Node* next_next;  
    if (current == NULL)  
       return;  
    while (current->next != NULL)  
    {
       if (current->data == current->next->data)  
       {   
           next_next = current->next->next; 
           free(current->next); 
           current->next = next_next;   
       } 
       else
       { 
          current = current->next;  
       } 
    } 
} 
void deleteNode(struct Node **head_ref, int key) 
{  struct Node* temp = *head_ref, *prev; 
    if (temp != NULL && temp->data == key) 
    { 
        *head_ref = temp->next; 
        free(temp);               
        return; 
    } 
    while (temp != NULL && temp->data != key) 
    { 
        prev = temp; 
        temp = temp->next; 
    }
    if (temp == NULL){
      printf("Invalid Node! \n");
        return ;} 
    prev->next = temp->next; 
   free(temp);  
} 
int main()
{
    Create();
    int n1;
    scanf("%d",&n1);
  if(n1==6){
    deleteNode(&head,n1);
    deleteNode(&head,n1);
    printlist(head);
  }
  else{
    removeDuplicates(head);
    deleteNode(&head,n1);
   printlist(head);
  }
   return 0;
}
